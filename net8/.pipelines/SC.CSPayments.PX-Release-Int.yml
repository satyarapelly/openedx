#################################################################################
#                        OneBranch Pipelines - Buddy                            #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

schedules:
- cron: "0 17 * * *" # 10:00 AM PST (17:00 UTC) daily
  displayName: Daily_10_AM_PST
  branches:
    include:
    - master
- cron: "0 21 * * *" # 2:00 PM PST (21:00 UTC) daily
  displayName: Daily_2_PM_PST
  branches:
    include:
    - master

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false
- name: 'ReleaseDescription'
  displayName: 'Release Description'
  type: object
  default: Int Release

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none
  PipelineArtifactSource: current
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2022/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  TestsFolder: $(Pipeline.Workspace)/drop_build_main/Debug/COT.PXService
  ServiceRootPath: '$(Pipeline.Workspace)/drop_build_main/Package/Ev2'
  Release.ReleaseDescription: ${{parameters.ReleaseDescription}}

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      WindowsHostVersion: 1ESWindows2022
    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      binskim:
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
    
    # TODO: Add Stage to clean last 100 deployment history (uses ps task)
    stages:
## Build    
    - template: OneBranch.Build.Common.yml # https://aka.ms/obpipelines/templates
      parameters:
        buildType: 'Buddy'
        sign: true

## INT Deployment
    # INT WestUS2 region Deployment
    - template: SC.CSPayments.PX-Release-Region-Common.yml
      parameters:
        environment: INT
        dependsOn: build
        region: WestUS2
        pipelineArtifactName: ${{ variables.PipelineArtifactSource }}
        ev2ServiceConnection: PX-Deployment-INT-PME
        serviceRootPath: $(ServiceRootPath)
        stagingRolloutSpecPath: $(ServiceRootPath)/INT/RolloutSpec.INT.Staging.WestUS2.json
        restartStagingRolloutSpecPath: $(ServiceRootPath)/INT/AppSettingRollouts/RolloutSpec.INT.AppSetting.Staging.WestUS2.json
        swapRolloutSpecPath: $(ServiceRootPath)/INT/RolloutSpec.INT.Swap.WestUS2.json
        serverFarmRolloutSpecPath: $(ServiceRootPath)//INT/RolloutSpec.INT.ServerFarm.WestUS2.json
        testRunSettingsFile: $(TestsFolder)/RunSettings/PME/PXService.IntWestUS2.PME.runsettings

    #INT Global resources rollout
    - template: SC.CSPayments.PX-Release-Global-Resources.yml
      parameters:
        environment: INT
        dependsOn: build
        pipelineArtifactName: ${{ variables.PipelineArtifactSource }}
        ev2ServiceConnection: PX-Deployment-INT-PME
        serviceRootPath: $(ServiceRootPath)
        gcsConfigRolloutSpecPath: $(ServiceRootPath)/INT/Monitor.RolloutSpec.INT.json
        keyVaultRolloutSpecPath: $(ServiceRootPath)/INT/RolloutSpec.INT.KeyVault.json
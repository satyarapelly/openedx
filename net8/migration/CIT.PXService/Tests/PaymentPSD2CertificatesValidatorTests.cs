// <copyright file="PaymentPSD2CertificatesValidatorTests.cs" company="Microsoft">Copyright (c) Microsoft. All rights reserved.</copyright>

namespace CIT.PXService.Tests
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.Commerce.Payments.Common;
    using Microsoft.Commerce.Payments.Common.Web;
    using Microsoft.Commerce.Payments.PXService.V7.PaymentChallenge;
    using Microsoft.Commerce.Tracing;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Common = Microsoft.Commerce.Payments.Common.Transaction;

    [TestClass]
    public class PaymentPSD2CertificatesValidatorTests
    {
        private const string AcsSignedContentVisa = ".eyJhY3NVUkwiOiJodHRwczovL3d3dy5yc2EzZHNhdXRoLmNvLnVrLzNkczIvQ1JlcT9pc3N1ZXI9YmFyY2xheXMiLCJhY3NFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsIngiOiJJVkUwaWI4d1BiVGpYdi1ZOUVEbHVjQlN0ekxfOWwtTWJ0LVJvNW4zN2EwIiwieSI6Im5OVGY0T2xqa3ZmV0pPbWVmSjlBWGdmMnhFSi0xWEpPeEVNRjdsSXU4NTgiLCJjcnYiOiJQLTI1NiJ9LCJzZGtFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IjJiVUtvc1NsOTQwSk9IcWxLUWpqYnpUYW5KNEgtc1RwR2lkWjNyWnhib00iLCJ5IjoibXB3Ml9vaWNwU0tCWW1zNkx1T0haVWZ3ZEpkWXZPd0otdjRVcjhiMmJESSJ9fQ.G9Unj3pHpWFoLtW7Gjof5k810cZ6_c229ZhwZnA6I8wnEGXtBTB3n5OE4x0TwMfw-hiimQHlDvpu0hTXkPqwwsSypb0rwq6MM-7vvgnNzEmgOsG5THgawfgxEfEFmNtwNNFtir4GIFCN593HgQ47Lw2pG0SYHmM2Xh7KQc5KXyD0DpoK4wwbNyumkLkEujFAWtlNRrS6_M32m-3l0uZaWCULsyJ7Y9z6nNLY-T-31GkyA-3bKekfYpWEtcyAOtqPnvaaaxieb60rTuaX3FJYwo-8BmlVKFfc04fBJTj-OAJ7Wz_OSFlL8BMKzmTwM8-o43xTx59mEJJUNZdBDOVM4w";

        // [SuppressMessage("Microsoft.Security", "CS002:SecretInNextLine", Justification="Test ACS cert used in validation test")]
        private const string AcsSignedContentMastercard = ".eyJhY3NVUkwiOiJodHRwczovL3RzeXMuYXJjb3QuY29tL2Fjcy9hcGkvdGRzMi90eG4vYXBwL3YxL2NyZXEiLCJhY3NFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6ImZQNE5EbFlNYVJmenVBX1NIc19mZ0pzNlpNLXNGSnljWDFPaUZub1hvSW8iLCJ5IjoiS0hVRWZLSUJsdjdEaWJBVkVLY180MnVfYVowcFN1c3hKZGducTFZZy1PQSJ9LCJzZGtFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6InJzSWR2TVJQSkw2eHdwNnlubTV1ejh3alBfa0JNeGlNcU5TeFpWY1RrWEkiLCJ5IjoidzI0bU5aeElDaVJIZWs3aU5ZUDFLQjFfcHRjLVducVFHanlQM2ZqZWxiQSJ9fQ.edAoDPxsHfNgb7GGUH0qbK_BulgI_Ezp0658O-dib2MwZy21KoB9vExO70NlXkOJF2CgcohutJLWnKcr1cKdSJrnoFwzRn_R5ByAr8e4378Z-24E3xjZa77KIlpwvPLu1nk8YZD2ux-bgfjd_3jEnaL7Dx_wQaLGnpdHh9gwwhuQ-pW3B19y6GfnSKoSE89DWaiobO_yV4fyaatXMH7vFJlU5MlJpqnavx0BW-3ATSSpnwJb63A8e3zEz-IHweKXu4EiNEMjAKtgkDP1wl_sXfFN0VhN9RZPfOpmKGEJBnQ8GJH5hMK7y5VRlAzRDrDOSZ8a03D-dqJGU99fuaC4Dw";
        private const string AcsSignedContentEmpty = "";
        private const string AcsSignedContentBadFormat = "eyJ4NWMiOlsiTUlJRTZ6Q0NBOU9nQXdJQkFnSVVkUUs3SUZUVDFWUEwwcVp2d1h5UTBySytGVHN3RFFZSktvWklodmNOQVFFTEJRQXdjVEVMTUFrR0ExVUVCaE1DVlZ.tvWklodmNOQVFFTEJRQXdjVEVMTUFrR0ExVUVCaE1DVlZNeERUQUxCZ05WQkFvVEJGWkpVMEV4THpBdEJnTlZCQXNUSmxacGMyRWdTVzUwWlhKdVlYUn";
        private const string AcsSignedContentVisaEmulatorWithHeader = "eyJhbGciOiJQUzI1NiIsIng1YyI6WyJNSUlFQWpDQ0F1cWdBd0lCQWdJSkFMYkN5N0MzeEIybk1BMEdDU3FHU0liM0RRRUJDd1VBTUlHVk1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDVjBFeEVEQU9CZ05WQkFjTUIxSmxaRzF2Ym1ReEhqQWNCZ05WQkFvTUZVMXBZM0p2YzI5bWRDQkRiM0p3YjNKaGRHbHZiakVpTUNBR0ExVUVBd3daWVdOelpXMTFiR0YwYjNJdWJXbGpjbTl6YjJaMExtTnZiVEVqTUNFR0NTcUdTSWIzRFFFSkFSWVVjSGhrWlhaelFHMXBZM0p2YzI5bWRDNWpiMjB3SGhjTk1qRXdNekF5TWpNek56VTVXaGNOTXpFd01qSTRNak16TnpVNVdqQ0JsVEVMTUFrR0ExVUVCaE1DVlZNeEN6QUpCZ05WQkFnTUFsZEJNUkF3RGdZRFZRUUhEQWRTWldSdGIyNWtNUjR3SEFZRFZRUUtEQlZOYVdOeWIzTnZablFnUTI5eWNHOXlZWFJwYjI0eElqQWdCZ05WQkFNTUdXRmpjMlZ0ZFd4aGRHOXlMbTFwWTNKdmMyOW1kQzVqYjIweEl6QWhCZ2txaGtpRzl3MEJDUUVXRkhCNFpHVjJjMEJ0YVdOeWIzTnZablF1WTI5dE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeE5hdUdoRVZPSGFUaGJlMkV1d0dTK3hrVzYwdmkrd1Y4K2ljRktFcFljd01Dbk5WemJNNkM2YVF1b1RZS3VrVkQ3bDR3MXRtbjg2bGdYQWpaMG9YaDR3OXdiNzZmVWFadW5sRkNndXNDQ1NtMWYyaU9lbXdVbVQyWTROb2hha21IU20xcVBpVWtraTY4L0FlSlJqVWRjVzY4c3BvcGhXVHNiNndzWDJGWjkwUHV0VkVOSk5oSUhwek82bHpnclRzME1DbkhSdnoxbkVsNEtFQ040eXBPQVJGS2VUSWdROWR2ZE9LRDRVM3czNWVQTzJjaFdDdytkZ1hBR0lkaDVpSkVFVTNrZlBxV1JQK0N4eW0xYUlTRVZ5RFhCc3JKUGNkaU1wQUtYanBPTi9hOXJTVURDejM5b3hnWURvQW11RnJDbms1VEEzaEtnb3hPd3VjT3hNN0FRSURBUUFCbzFNd1VUQWRCZ05WSFE0RUZnUVV3MEl6VDd2emRhTXJoZCtqWmJHcmpkNEpibWt3SHdZRFZSMGpCQmd3Rm9BVXcwSXpUN3Z6ZGFNcmhkK2paYkdyamQ0SmJta3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFpM1l3T2M5cEtlQm1oa3VXS0ZXSnJCelFWMWtMdVU2ZTd1bnJVa2tUK0xTSXhnVERrc3orUGtLYk12eGhoVitMSVdLNWJXY2hqdlVqMk9tQUwwcFZ2ZWNxRU9Vazk0aW0zWTRSOXdGeGFDNjFrTE5xWXViRHpIMytGejNIQW9vYWRQWmpVQ3hGOWdkdTNHbnBySW1KQTlmUjR3UnZ5VGhMTTRvNzgzVDRIL2xiV3Y4TzRNSFFkdjQzdGxNWjZLTDFPRlJYNUNiNytjTG5HbXgvZ1pKNUc3Tm1MVWpEQzlEL1BBQWhKRlQzcXI0VS9YZ1BDUWlyd2NyRmdpZkdTMWdoOHVIYWhRenBIR1liWlBwVC9udDdVTnVUazZZTHRsUkNtWDlRaUw0dFNDVjRTSWVXN2JOM1lxT204b0lMTmJ6bVNxWjZGdVpHNlVvM2w2aWVZN1BVM2c9PVxuIl19.eyJhY3NFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlljbG5QaldsMmt2NFRrWm5GdHZjOEg2dUJ2cWkybEtLZ1lHLTQ3cVY5YXMiLCJ5IjoiZjNXUFJoUG9PSUwyaTllUDN0SF83RFhNSnF1SU9RZXB3RmlyTGd6djk2YyJ9LCJzZGtFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IkFyYkd0UWhNWGhEbEpSNnQ0bnB5MEdXM2xsN1BaMWNCb000Wi13Q1dSYk0iLCJ5IjoibEhVam93c1Bick5TTWk2MXAwWEphQnBWVmpjNlBBaE1XR0RwSkI3YnBnYyJ9LCJhY3NVUkwiOiJodHRwczovL3BheW1lbnRzLWFjcy1lbXVsYXRvci5henVyZXdlYnNpdGVzLm5ldC9hY3Mvc2RrL2NoYWxsZW5nZSJ9.rrx5oT89CHJQ_zXISyp5VRx0iJGdGRLco7GMHYol78zcsEEq8XSNazU-JkfDEQGE-ZC0tfodkW0rWPa00FagXkD6zgm-0TPDA4-NbwvHoIZ2gB6mtboSiu0xcvzQFcm_wjyq71y5plsgPKnxFKxOtDNbZFD_Lt6XtfeFxL4V_YVD-L971tESxRehRO8p3UTDirJUMFYBtgGBEK7lb7SHUydjH-qYdcHI8z1BMEKZHSNfX2kxJYpW_IH9VFv_rRxoFqs-tITWd7nAuyi96fvA2-L6EcUO1KNC1a9kwzdOkrvJvU6XSM5YAhbG2JKruSs_9t1CoU5jhvEqLPuEYpRsFw";
        private const string AcsSignedContentVisaEmulatorWithoutHeader = ".eyJhY3NFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlljbG5QaldsMmt2NFRrWm5GdHZjOEg2dUJ2cWkybEtLZ1lHLTQ3cVY5YXMiLCJ5IjoiZjNXUFJoUG9PSUwyaTllUDN0SF83RFhNSnF1SU9RZXB3RmlyTGd6djk2YyJ9LCJzZGtFcGhlbVB1YktleSI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IkFyYkd0UWhNWGhEbEpSNnQ0bnB5MEdXM2xsN1BaMWNCb000Wi13Q1dSYk0iLCJ5IjoibEhVam93c1Bick5TTWk2MXAwWEphQnBWVmpjNlBBaE1XR0RwSkI3YnBnYyJ9LCJhY3NVUkwiOiJodHRwczovL3BheW1lbnRzLWFjcy1lbXVsYXRvci5henVyZXdlYnNpdGVzLm5ldC9hY3Mvc2RrL2NoYWxsZW5nZSJ9.rrx5oT89CHJQ_zXISyp5VRx0iJGdGRLco7GMHYol78zcsEEq8XSNazU-JkfDEQGE-ZC0tfodkW0rWPa00FagXkD6zgm-0TPDA4-NbwvHoIZ2gB6mtboSiu0xcvzQFcm_wjyq71y5plsgPKnxFKxOtDNbZFD_Lt6XtfeFxL4V_YVD-L971tESxRehRO8p3UTDirJUMFYBtgGBEK7lb7SHUydjH-qYdcHI8z1BMEKZHSNfX2kxJYpW_IH9VFv_rRxoFqs-tITWd7nAuyi96fvA2-L6EcUO1KNC1a9kwzdOkrvJvU6XSM5YAhbG2JKruSs_9t1CoU5jhvEqLPuEYpRsFw";

        private const string DsRootCertVisa = "MIIDojCCAoqgAwIBAgIQE4Y1TR0/BvLB+WUF1ZAcYjANBgkqhkiG9w0BAQUFADBrMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNvbW1lcmNlIFJvb3QwHhcNMDIwNjI2MDIxODM2WhcNMjIwNjI0MDAxNjEyWjBrMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNvbW1lcmNlIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvV95WHm6h2mCxlCfLF9sHP4CFT8icttD0b0/Pmdjh28JIXDqsOTPHH2qLJj0rNfVIsZHBAk4ElpF7sDPwsRROEW+1QK8bRaVK7362rPKgH1g/EkZgPI2h4H3PVz4zHvtH8aoVlwdVZqW1LS7YgFmypw23RuwhY/81q6UCzyr0TP579ZRdhE2o8mCP2w4lPJ9zcc+U30rq299yOIzzlr3xF7zSujtFWsan9sYXiwGd/BmoKoMWuDpI/k4+oKsGGelT84ATB+0tvz8KPFUgOSwsAGl0lUq8ILKpeeUYiZGo3BxN77t+Nwtd/jmliFKMAGzsGHxBvfaLdXe6YJ2E5/4tAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBQVOIMPPyw/cDMezUb+B4wg4NfDtzANBgkqhkiG9w0BAQUFAAOCAQEAX/FBfXxcCLkr4NWSR/pnXKUTwwMhmytMiUbPWU3J/qVAtmPN3XEolWcRzCSs00Rsca4BIGsDoo8Ytyk6feUWYFN4PMCvFYP3j1IzJL1kk5fui/fbGKhtcbP3LBfQdCVp9/5rPJS+TUtBjE7ic9DjkCJzQ83z7+pzzkWKsKZJ/0x9nXGIxHYdkFsd7v3M9+79YKWxehZx0RbQfBI8bGmX265fOZpwLwU8GUYEmSA20GBuYQa7FkKMcPcw++DbZqMAAb3mLNqRX6BGi01qnD093QVG/na/oAo85ADmJ7f/hC3euiInlhBx6yLt398znM/jra6O1I7mT1GvFpLgXPYHDw==";
        private const string DsPublicRSAIntermediateRootCertVisa = "MIIFqTCCA5GgAwIBAgIPUT6WAAAA20Qn7qzgvuFIMA0GCSqGSIb3DQEBCwUAMG8xCzAJBgNVBAYTAlVTMQ0wCwYDVQQKDARWSVNBMS8wLQYDVQQLDCZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3NvY2lhdGlvbjEgMB4GA1UEAwwXVmlzYSBQdWJsaWMgUlNBIFJvb3QgQ0EwHhcNMjEwMzE2MDAwMDAwWhcNNDEwMzE1MDAwMDAwWjBvMQswCQYDVQQGEwJVUzENMAsGA1UECgwEVklTQTEvMC0GA1UECwwmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xIDAeBgNVBAMMF1Zpc2EgUHVibGljIFJTQSBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2WEbXLS3gI6LOY93bP7Kz6EO9L1QXlr8l+fTkJWZldJ6QuwZ1cv4369tfjeJ8O5wSJiDcVw7eNdOP73LfAtwHlTnUnb0e9ILTTipc5bkNnAevocrJACsrpiQ8jBI9ttpcqKUeJgzW4Ie25ypirKroVD42b4E0iICK2cZ5QfD4BSzUnftp4Bqh8AfpGvG1lreCaD53qrsy5SUadY/NaeUGOkqdPvDSNoDIdrbExwnZaSFUmjQT1svKwMqGo2GFrgJ4cULEp4NNj5rga8YTTZ7Xo5MblHrLpSPOmJev30KWi/BcbvtCNYNWBTg7UMzP3cKMQ1pGLvG2PgvFTZSRvH3QzngJRgrDYYOJ6kj9ave+6yOOFqj80ZCuH0Nugt2mMS3c3+Nksaw+6H3cQPsE/Gv5zjfsKleRhEFtE1gyrdUg1DMgu8o/YhKM7FAqkXUn74zwoRFgx3Mi5OaGTQbg+NlwJgR4sVHXCV4s9b8PjneLhzWMn353SFARF9dnO7LDBqqtT6WltJu1z9x2Ze0UVNZvxKGcyCkLody29O8j9/MGZ8SOSUu4U6NHrebKuuf9Fhtn6PqQ4ppkhy6sReXeV5NVGfVpDYY5ZAKEWqTYgMULWpQ2Py4BGpFzBe07jXkyulRpoKvz14iXeA0oq16c94DrFYX0jmrWLeU4a/TCZQLFIsCAwEAAaNCMEAwHQYDVR0OBBYEFEtNpg77oBHorQvi8PMKAC+sixb7MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQC5BU9qQSZYPcgCp2x0Juq59kMmXuBly094DaEnPqvtCgwwAirkv8x8/QSOxiWWiu+nveyuR+j6Gz/fJaV4u+J5QEDycfk605Mw3HIcJOeZvDgk1eyOmQwUP6Z/BdQTNJmZ92Z8dcG5yWCxLBrqPH7ro3SsjhYq9duIJU7jfizCJCN4W8tp0D2pWBe1/CYNswP4GMs5jQ5+ZQKN/L5JFdwVTu7XPt8b5zfgbmmQpVmUn0oFwm3OI++Z6gEpNmW5bd/2oUIZoG96Qff2fauVMAYiWQvNnL3y1gkRguTOSMVUCCiGfdvwu5ygowillvV2nHb7+YibQ9N5Z2spP0o9Zlfzoat27WFpyK47TiUdu/4toarLKGZP+hbA/F4xlnM/8EfZkE1DeTTI0lhN3O8yEsHrtRl1OuQZ/IexHO8UGU6jvn4TWo10HYeXzrGckL7oIXfGTrjPzfY62T5HDW/BAEZS+9Tkijz25YM0fPPz7IdlEG+k4q4YwZ82j73Y9kDEM5423mrWorq/Bq7I5Y8v0LTY9GWHYrpElYf0WdOXAbsfwQiT6qnRio+p82VyqlY8Jt6VVA6CDy/iHKwcj1ELEnDQfVv9hedoxmnQ6xe/nK8czclu9hQJRv5Lh9gk9Q8DKK2nmgzZ8SSQ+lr3mSSeY8JOMRlE+RKdOQIChWthTJKh7w==";
        private const string DsEcommeIssuingG2CertVisa = "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";
        private const string DsRootCertMastercard = "MIIFxzCCA6+gAwIBAgIQFsjyIuqhw80wNMjXU47lfjANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQGEwJVUzETMBEGA1UEChMKTWFzdGVyQ2FyZDEoMCYGA1UECxMfTWFzdGVyQ2FyZCBJZGVudGl0eSBDaGVjayBHZW4gMzEuMCwGA1UEAxMlUFJEIE1hc3RlckNhcmQgSWRlbnRpdHkgQ2hlY2sgUm9vdCBDQTAeFw0xNjA3MTQwNzI0MDBaFw0zMDA3MTUwODEwMDBaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQKEwpNYXN0ZXJDYXJkMSgwJgYDVQQLEx9NYXN0ZXJDYXJkIElkZW50aXR5IENoZWNrIEdlbiAzMS4wLAYDVQQDEyVQUkQgTWFzdGVyQ2FyZCBJZGVudGl0eSBDaGVjayBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxZF3nCEiT8XFFaq+3BPT0cMDlWE76IBsdx27w3hLxwVLog42UTasIgzmysTKpBc17HEZyNAqk9GrCHo0Oyk4JZuXHoW80goZaR2sMnn49ytt7aGsE1PsfVup8gqAorfm3IFab2/CniJJNXaWPgn94+U/nsoaqTQ6j+6JBoIwnFklhbXHfKrqlkUZJCYaWbZRiQ7nkANYYM2Td3N87FmRanmDXj5BG6lc9o1clTC7UvRQmNIL9OdDDZ8qlqY2Fi0eztBnuo2DUS5tGdVy8SgqPM3E12ftk4EdlKyrWmBqFcYwGx4AcSJ88O3rQmRBMxtk0r5vhgr6hDCGq7FHK/hQFP9LhUO91qxWEtMn76Sa7DPCLas+tfNRVwG12FBuEZFhdS/qKMdIYUE5Q6uwGTEvTzg2kmgJT3sNa6dbhlYnYn9iIjTh0dPGgiXap1Bhi8B9aaPFcHEHSqW8nZUINcrwf5AUi+7D+q/AG5ItiBtQTCaaFm74gv51yutzwgKnH9Q+x3mtuK/uwlLCslj9DeXgOzMWFxFguuwLGX39ktDnetxNw3PLabjHkDlGDIfx0MCQakM74sTcuW8ICiHvNA7fxXCnbtjsy7at/yXYwAd+IDS51MA/g3OYVN4M+0pG843Re6Z53oODp0Ymugx0FNO1NxT3HO1hd7dXyjAV/tN/GGcCAwEAAaNFMEMwDgYDVR0PAQH/BAQDAgGGMBIGA1UdEwEB/wQIMAYBAf8CAQEwHQYDVR0OBBYEFNSlUaqS2hGLFMT/EXrhHeEx+UqxMA0GCSqGSIb3DQEBCwUAA4ICAQBLqIYorrtVz56F6WOoLX9CcRjSFim7gO873a3p7+62I6joXMsMr0nd9nRPcEwduEloZXwFgErVUQWaUZWNpue0mGvU7BUAgV9Tu0J0yA+9srizVoMvx+o4zTJ3Vu5p5aTf1aYoH1xYVo5ooFgl/hI/EXD2lo/xOUfPKXBY7twfiqOziQmTGBuqPRq8h3dQRlXYxX/rzGf80SecIT6wo9KavDkjOmJWGzzHsn6Ryo6MEClMaPn0te87ukNN740AdPhTvNeZdWlwyqWAJpsv24caEckjSpgpoIZOjc7PAcEVQOWFSxUesMk4Jz5bVZa/ABjzcp+rsq1QLSJ5quqHwWFTewChwpw5gpw+E5SpKY6FIHPlTdl+qHThvN8lsKNAQg0qTdEbIFZCUQC0Cl3Ti3q/cXv8tguLJNWvdGzB600Y32QHclMpeyabT4/QeOesqpx6Da70J2KvLT1j6Ch2BsKSzeVLahrjnoPrdgiIYYBOgeA3T8SE1pgagt56R7nIkRQbtesoRKi+NfC7pPb/G1VUsj/cREAHH1i1UKa0aCsIiANfEdQN5Ok6wtFJJhp3apAvnVkrZDfOG5we9bYzvGoI7SUnleURBJ+N3ihjARfL4hDeeRHhYyLkM3kEyEkrJBL5r0GDjicxM+aFcR2fCBAkv3grT5kz4kLcvsmHX+9DBw==";

        /// <summary>
        /// Confirms valid ACS and DS certs are used in PaymentSessionsHandler.cs
        /// </summary>
        /// <param name="mockjws">ACS content string</param>
        /// <param name="rootDsCert">Ecommerce Root Certificate</param>
        /// <param name="intermediateDsCert">Public RSA Root Certificate</param>
        /// <param name="g2DsCert">Ecommerce Issuing Certificate G2</param>
        /// <param name="testContextScenario"></param>
        /// <param name="expectedcertauthorizationresult"></param>
        /// <returns></returns>
        [TestMethod]
        ////[DataRow(AcsSignedContentVisa, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "", true)] /// Valid ACS and appropriate dsCerts
        ////[DataRow(AcsSignedContentVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, DsRootCertVisa, "", true)] /// Valid ACS and valid dsCerts in random order 
        ////[DataRow(AcsSignedContentVisa, DsPublicRSAIntermediateRootCertVisa, DsRootCertVisa, DsRootCertVisa, "", true)] /// Valid ACS and repetition of a dsCerts, valid
        [DataRow(AcsSignedContentEmpty, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "", false)] /// Empty ACS
        [DataRow(AcsSignedContentBadFormat, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "", false)] /// ACS that does not decode correctly
        [DataRow(AcsSignedContentVisaEmulatorWithHeader, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "px-service-psd2-e2e-emulator", true)] /// Emulator test with valid parameters 
        [DataRow(AcsSignedContentVisaEmulatorWithoutHeader, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "px-service-psd2-e2e-emulator", false)] /// Emulator test with invalid parameters 
        [DataRow(AcsSignedContentMastercard, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "", false)] /// ACS and dsCert mismatch
        [DataRow(AcsSignedContentVisaEmulatorWithoutHeader, DsPublicRSAIntermediateRootCertVisa, DsRootCertVisa, DsRootCertVisa, "px-service-psd2-e2e-emulator", false)] /// Emulator test with invalid parameters
        [DataRow(AcsSignedContentBadFormat, DsPublicRSAIntermediateRootCertVisa, DsRootCertVisa, DsEcommeIssuingG2CertVisa, "px-service-psd2-e2e-emulator", false)] /// Emulator test with invalid parameters
        [DataRow(null, DsRootCertVisa, DsPublicRSAIntermediateRootCertVisa, DsEcommeIssuingG2CertVisa, "", false)] /// Null ACS
        [DataRow(null, null, null, null, "", false)] /// Null ACS and null dsCert
        public Task PassMultiCert_CheckSuccessOrFail(string mockjws, string rootDsCert, string intermediateDsCert, string g2DsCert, string testContextScenario, bool expectedcertauthorizationresult)
        {
            List<string> testdsrootcert = new List<string> { rootDsCert, intermediateDsCert, g2DsCert };

            Common.TestContext tc = new Common.TestContext(
                      contact: "paymentclient_testapp",
                      retention: DateTime.MaxValue,
                      scenarios: testContextScenario);
            string sessionId = "123456789";

            var paymentcertificatevalidator = new PaymentPSD2CertificatesValidator(mockjws, testdsrootcert, tc, sessionId);
            try
            {
                /// Act
                bool result = paymentcertificatevalidator.VerifySignature(traceActivityId: new EventTraceActivity());
                Assert.AreEqual(expectedcertauthorizationresult, result, string.Format("expected authorization to {0}", expectedcertauthorizationresult ? "succeed" : "fail"));
            }
            catch (ValidationException ex)
            {
                /// Assert
                Assert.AreEqual(ex.ErrorCode, ErrorCode.InvalidRequestData, "the error code for authorization failure is not as expected");
            }

            return Task.CompletedTask;
        }

        [TestMethod]
        ////[DataRow(AcsSignedContentVisa, DsEcommeIssuingG2CertVisa, "", true)] /// Valid ACS and appropriate dsCert, Visa
        ////[DataRow(AcsSignedContentMastercard, DsRootCertMastercard, "", true)] /// Valid ACS and appropriate dsCert, MC
        [DataRow(AcsSignedContentMastercard, DsEcommeIssuingG2CertVisa, "", false)] /// ACS and dsCert mismatch
        [DataRow(AcsSignedContentVisa, DsRootCertMastercard, "", false)] /// ACS and dsCert mismatch
        [DataRow(AcsSignedContentEmpty, DsEcommeIssuingG2CertVisa, "", false)] /// Empty ACS
        [DataRow(AcsSignedContentBadFormat, DsEcommeIssuingG2CertVisa, "", false)] /// ACS that does not decode correctly
        [DataRow(AcsSignedContentVisaEmulatorWithHeader, DsEcommeIssuingG2CertVisa, "px-service-psd2-e2e-emulator", true)] /// Emulator test with valid parameters
        [DataRow(AcsSignedContentVisaEmulatorWithoutHeader, DsEcommeIssuingG2CertVisa, "px-service-psd2-e2e-emulator", false)] /// Emulator test with invalid parameters
        [DataRow(null, DsRootCertMastercard, "", false)] /// Null ACS
        [DataRow(null, null, "", false)] /// Null ACS and null dsCert
        public Task PassSingleCert_CheckSuccessOrFail(string mockjws, string dsCert, string testContextScenario, bool expectedcertauthorizationresult)
        {
            List<string> testdsrootcert = new List<string> { dsCert };

            Common.TestContext tc = new Common.TestContext(
                      contact: "px.azure.cot",
                      retention: DateTime.MaxValue,
                      scenarios: testContextScenario);
            string sessionId = "123456789";

            var paymentcertificatevalidator = new PaymentPSD2CertificatesValidator(mockjws, testdsrootcert, tc, sessionId);
            try
            {
                /// Act
                bool result = paymentcertificatevalidator.VerifySignature(traceActivityId: new EventTraceActivity());
                Assert.AreEqual(expectedcertauthorizationresult, result, string.Format("expected authorization to {0}", expectedcertauthorizationresult ? "succeed" : "fail"));
            }
            catch (ValidationException ex)
            {
                /// Assert
                Assert.AreEqual(ex.ErrorCode, ErrorCode.InvalidRequestData, "the error code for authorization failure is not as expected");
            }

            return Task.CompletedTask;
        }
    }
}

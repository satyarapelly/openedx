{
  "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json",
  "contentVersion": "0.0.0.1",
  "parameters": {
    "servicePlanName": {
      "type": "string"
    },
    "siteName": {
      "type": "string"
    },
    "stageName": {
      "type": "string"
    },
    "alwaysOn": {
      "type": "bool",
      "defaultValue": false
    },
    "mintlsVersion": {
      "type": "string",
      "defaultValue": "1.2",
      "allowedValues": [
        "1.0",
        "1.1",
        "1.2"
      ]
    },
    "managedIdentityResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "managedIdentity": {
      "type": "string",
      "defaultValue": ""
    },
    "managedIdentityClientId": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultName": {
      "type": "string"
    },
    "sslClientCertificateName": {
      "type": "string"
    },
    "customHostname": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "autoHealEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "autoHealRules": {
      "type": "object",
      "defaultValue": {}
    },
    "websiteLocalCachedOption": {
      "type": "string",
      "defaultValue": "Never"
    },
    "websiteLocalCacheSize": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "resourceLocation": "[resourcegroup().location]",
    "websiteApiVersion": "2019-08-01",
    "resourceLocationEscapeSpace": "[replace(variables('resourceLocation'),' ','')]",
    "fullSiteName": "[concat(parameters('siteName'), '-', variables('resourceLocationEscapeSpace'))]",
    "fullServicePlanName": "[concat(parameters('servicePlanName'), '-', replace(variables('resourceLocation'),' ',''))]",
    "fullEnvironmentName": "[concat(parameters('environmentName'), '-', variables('resourceLocationEscapeSpace'))]",
    "sslClientCertificateResourceName": "[concat(replace(variables('fullSiteName'),' ',''),'-cert-', replace(variables('resourceLocation'),' ',''))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/certificates",
      "name": "[variables('sslClientCertificateResourceName')]",
      "apiVersion": "[variables('websiteApiVersion')]",
      "location": "[variables('resourceLocation')]",
      "properties": {
        "keyVaultId": "[resourceId(parameters('managedIdentityResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "keyVaultSecretName": "[parameters('sslClientCertificateName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('fullServicePlanName'))]"
      }
    },
    {
      "apiVersion": "[variables('websiteApiVersion')]",
      "name": "[variables('fullSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('resourceLocation')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId(parameters('managedIdentityResourceGroup'),'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity'))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms/', variables('fullServicePlanName'))]",
        "httpsOnly": true,
        "clientCertMode": "Optional",
        "clientCertEnabled": true,
        "clientCertExclusionPaths": "/probe;",
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "type": "Microsoft.Web/sites/hostnameBindings",
          "name": "[concat(variables('fullSiteName'), '/', parameters('customHostname'))]",
          "apiVersion": "[variables('websiteApiVersion')]",
          "location": "[variables('resourceLocation')]",
          "properties": {
            "sslState": "SniEnabled",
            "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', variables('sslClientCertificateResourceName'))).Thumbprint]"
          },
          "dependsOn": [
            "[concat('Microsoft.Web/certificates/',variables('sslClientCertificateResourceName'))]",
            "[resourceId('Microsoft.Web/sites', variables('fullSiteName'))]"
          ]
        },
        {
          "apiVersion": "[variables('websiteApiVersion')]",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('fullSiteName'))]"
          ],
          "tags": {
            "displayName": "Application Settings"
          },
          "properties": {
            "WEBSITE_RECYCLE_ON_CERT_ROTATION": "1",
            "WEBSITE_LOAD_CERTIFICATES": "*",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
            "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
            "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
            "Environment": "[variables('fullEnvironmentName')]",
            "WEBSITE_FIRST_PARTY_ID": "AntMDS",
            "WEBSITE_NODE_DEFAULT_VERSION": "6.7.0",
            "WEBSITE_SWAP_WARMUP_PING_PATH": "/probe",
            "WEBSITE_SWAP_WARMUP_PING_STATUSES": 200,
            "AZURE_CLIENT_ID": "[parameters('managedIdentityClientId')]",
            "WEBSITE_LOCAL_CACHE_OPTION": "[parameters('websiteLocalCachedOption')]",
            "WEBSITE_LOCAL_CACHE_SIZEINMB": "[parameters('websiteLocalCacheSize')]"
          }
        },
        {
          "apiVersion": "[variables('websiteApiVersion')]",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('fullSiteName'))]"
          ],
          "tags": {
            "displayName": "General Settings"
          },
          "properties": {
            "alwaysOn": "[parameters('alwaysOn')]",
            "mintlsVersion": "[parameters('mintlsVersion')]",
            "use32BitWorkerProcess": false,
            "httpLoggingEnabled": true,
            "requestTracingEnabled": true,
            "logsDirectorySizeLimit": 50,
            "healthCheckPath": "/probe",
            "autoHealEnabled": "[parameters('autoHealEnabled')]",
            "autoHealRules": "[parameters('autoHealRules')]",
            "ftpsState": "FtpsOnly"
          }
        }
      ]
    }
  ]
}
